49강 App - 출력정보에 대한 보안

저번시간은 오염된 정보가 들어올경우
이번시간은 오염된 정보가 나갈때



앱페이지에 create에

제목 : xss
내용 : <script> alert('merong'); </script>

=>웹브라우저가 이코드를 자바스크립트 코드로 실행 시켜버림


또다른 오류
내용 : <script> location.href = 'https://opentutorials.org/course/1';</script>
=> 강제로 다른 사이트로 팅겨버림 


많은 온라인 서비스들이 사용자로부터 입력받은 정보를 출력할때는 그정보에서 문제가 될 수 있는것을 필터링하는 작업을 많이함.


방법 1 스크립트 구문을 강제로 지워버림
방법 2 스크립트 태그를 문자로 인식되도록 설정 

'html entities'를 검색


------------------------------------
49.2
사용자가 입력한 정보를 외부로 출력할때 오염된 정보가 있다면 그 정보를 소독하는 것이 첫번재 목표.
npm을 통해서 내가아닌 다른사람이 만든 모듈을 사용해서 애플리케이션을 빠르게 만드는 것 

npm senitize(소독이라는 뜻) html 검색

먼저 'npm init' 을 입력.
입력을 하면 우리의 애플리케이션을 npm으로 관리하기 위한 절차가 시작됨.
package name: 이 뜨면 그냥 enter 칠 것. 그러면 기본적으로 디렉토리 이름이 그 패키지 네임이됨.
자신의 애플리케이션을 패키지로서 관리. viersion등은 모두 기본값으로 enter치면됨. 
=> package.json이라는 파일이 생김
해당 파일에 우리의 프로젝트 정보고 코드로 생성이 되어져 있음. 


cmd에 
npm install -S sanitize-html
(-S 우리가 진행하는 프로젝트에서 사용할 작은 조각의 프로그램/즉 부품으로서 설치하게됨)
(이전 PM2의 경우는 -g / g의경우 global을 약자로서 PM2를 이컴퓨터 전역에서 어디서나 쓸 수 있는 독립된 프로그램으로 설치)


node_modules에 많은 디렉토리가 생김.
sanitize-html이 잇는지 확인할 것
package.json을 다시 들어가보면 
  "dependencies": {
    "sanitize-html": "^1.27.4"
가 새로생김. dependencies는 의존성이라는 의미. 우리의 앱이 sanitize-html을 사용하고 있다면 우리의 앱은 sanitize-html에 의존 하고 있다는 의미.

즉 package.json은 우리의 앱이 어떠한 외부 소프트웨어들에 의존하고잇는지를 적어주는 것. 

 snatize-html이외의 것들도 설치되었는데 해당 모듈들은 sanitize-html에서 의존 하고 있는 다른 소프트웨어. 이러한 복잡한 의존 관계를 npm이 우리대신 관리 해주고 있음. 

--------------------------------------
49.3

테스트 해보면 태그는 없애지만 내용은 허용해줌
특정 태그 허용하는것은 설명을 참고 할 것



