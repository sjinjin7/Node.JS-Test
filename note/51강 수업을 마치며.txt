JavaScript 
Node.js
을 사용해서
Web Application 을 만듬


이들은 WEB에 필수적인 요소들이면서 internet의 주요 동작 원리를 알게됨.


Nodejs는 JavaScript 문법으로 만들어짐. Javascript는 원래 Web browser을 프로그래밍적으로 제어하기 위해 만든 언어. Nodejs를 통해서 Javascript를 처음 접했다면 Web broser를 Javascript로 제어하는 방법에 도전해볼것.
=> 사용자에게 보여지는 client쪽 부분과 서버내에서 데이터를 처리하는 server측 부분을 하나의 단일 언어인 Javascript로 구현하게 됩니다. 

JavaScript를 Nodejs수업을 통해 처음 만났다면, Nodejs와 JavaScript가 하나인것처럼 느낄 수 있음. 자바스크립트를 이용하는 서로다른 시스템 (ex. Nodejs / Web Browser)를 경험해본다면 Javascript와 Javascript가 아닌 부분을 조금더 절도 있게 구분 할 수 있게됨. 그렇게 된다면 오늘날 쏟아지고있는 JavaScript로 제어할 수 있는 여러 시스템들을 매우 빠르게 공부해서 심도잇게 제어 할 수 있는 실력을 가질 수 있게 됨. 


DataBase
 우리는 정보를 데이터라는 디렉토리에 파일의 형태로 저장하고 있음. 파일은 쉽고 어디에나 있음. 하지만 불편하고 위험하고 느림. 파일의 단점. 파일을 이용해서 안전하면서도 빠르게 할려면 우리의 인생을 갈아넣어도 어려운 일임. 이렇게 어려운일을 위해 천재적인 엔지니어들이 만든 파일의 대체제가 바로 데이터베이스. 우리가 데이터베이스를 도입하면 데이터 디렉토리에 저장했던 정보를 데이터베이스라는 전문화된 프로그램에 저장하게됨. 그렇게되면 우리의웹은 데이터베이스가 가진 엄청난 성능과 보안과 편리함을 거져 먹는 애플리케이션으로 탈피 할 수 있게됨.  

Framework
 각 분야별로 소프트웨어들은 공통적인 부분과 공통적이지 않은 부분들이 공존. 예를들어서 웹 애플리케이션을 만드는 경우에 사용자의 요청을 처리하는 것, 인증 하는 것, 보안을 철저히 하는 것, 파일을 서비스 하는 같은 것들은 공통적인 부분입니다. 이러한 공통적인 요소를 미리 구현해놓은 것들을 프레임워크라고 일단 생각하면됨. 프레임워크를 사용하게되면 자신이 하고자 하는 것에 집중 할 수 있게 됨. 프레임워크를 다루기 위해서는 많은 공부를 해야함.
 기본적인 것으로는 Node.js가 어떠한 module을 가지고 있는가. Node.js 생태계가 만들고 있는 npm과 같은 패키지 매니저를 이용해서 우리가 설치해서 쓸수 잇는 모듈들이 어떠한 것이 있는가를 풍부하게 파악하는 것. 최근 소프트웨어 세계에서는 AWESOME이라는 문화현상이 생겨나고 있음. 개발자들은 AWESOME할만한 여러 라이브러리들을 모아둔 북마크들을 많이 만들고 있음.(Node.js AWESOME) 이러한 것들을 이용해서 주목받는 모듈들을 종종 살펴 볼 것.  우리가 알고 있는 모듈들이 많을수록 해낼 수 있는 일들이 많아짐. 
 더많은 것을 배우고 싶다는 충동. 이충동이 기대감, 호기심, 희망이 아니라 불안감, 자신없음, 초조함 때문이라면 진도를 나갈 상황은 아닌거같음. 이런경우 배운것을 복습하며 혹은 안보고도 짜보고 남들에게 설명도 해보면서 우리가 배운것을 계속해서 나의 뇌에 로드 시켜 보는게 좋음. 이 과정을 반복하다보면 어느순간 폭발적으로 진도를 나갈 수 있는 시기가옴. 그때가 진도를 나갈 수 있는 때인것으로 생각함.  

